import{_ as i,c as a,o as e,ae as n}from"./chunks/framework.DtB2lZXX.js";const c=JSON.parse('{"title":"Error: error:0308010C:digital envelope routines::unsupported","description":"昔も一回あったことあって、nodejsバージョン問題,色んな解決策","frontmatter":{"title":"Error: error:0308010C:digital envelope routines::unsupported","date":"2025-05-18","tags":["nodejs","v16","error:0308010C","nvm"],"description":"昔も一回あったことあって、nodejsバージョン問題,色んな解決策"},"headers":[],"relativePath":"20250518-error0308010.md","filePath":"20250518-error0308010.md"}'),t={name:"20250518-error0308010.md"};function r(l,s,p,h,o,d){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="solution-summary-error-error-0308010c-digital-envelope-routines-unsupported" tabindex="-1">Solution Summary: <code>Error: error:0308010C:digital envelope routines::unsupported</code> <a class="header-anchor" href="#solution-summary-error-error-0308010c-digital-envelope-routines-unsupported" aria-label="Permalink to &quot;Solution Summary: \`Error: error:0308010C:digital envelope routines::unsupported\`&quot;">​</a></h1><h1 id="解決策まとめ-error-error-0308010c-digital-envelope-routines-unsupported" tabindex="-1">解決策まとめ: <code>Error: error:0308010C:digital envelope routines::unsupported</code> <a class="header-anchor" href="#解決策まとめ-error-error-0308010c-digital-envelope-routines-unsupported" aria-label="Permalink to &quot;解決策まとめ: \`Error: error:0308010C:digital envelope routines::unsupported\`&quot;">​</a></h1><h1 id="解决方案汇总-error-error-0308010c-digital-envelope-routines-unsupported" tabindex="-1">解决方案汇总：<code>Error: error:0308010C:digital envelope routines::unsupported</code> <a class="header-anchor" href="#解决方案汇总-error-error-0308010c-digital-envelope-routines-unsupported" aria-label="Permalink to &quot;解决方案汇总：\`Error: error:0308010C:digital envelope routines::unsupported\`&quot;">​</a></h1><p>This error mainly occurs in Node.js 17+ due to the introduction of OpenSSL 3,<br> often seen in Webpack, crypto modules, or build tools.</p><p>このエラーは主に Node.js 17以降で OpenSSL 3 が導入されたことにより発生し、<br> 特に Webpack や暗号関連モジュール、ビルドツールで見られます。</p><p>此错误主要发生在 Node.js 17 及以上版本中，由于引入了 OpenSSL 3，<br> 常见于 Webpack、加密模块或构建工具中。</p><hr><h2 id="_1-temporary-startup-fix-临时启动解决办法-一時的起動対応" tabindex="-1">1. Temporary Startup Fix (临时启动解决办法 / 一時的起動対応) <a class="header-anchor" href="#_1-temporary-startup-fix-临时启动解决办法-一時的起動対応" aria-label="Permalink to &quot;1. Temporary Startup Fix (临时启动解决办法 / 一時的起動対応)&quot;">​</a></h2><p>Run Node.js with legacy OpenSSL support enabled:</p><p>Node.js をレガシー OpenSSL モードで起動する方法：</p><p>开启 Node.js 的 OpenSSL 传统支持模式运行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># macOS/Linux</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NODE_OPTIONS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--openssl-legacy-provider</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your_app.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows PowerShell</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env:NODE_OPTIONS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--openssl-legacy-provider&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your_app.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># npm scripts example</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;scripts&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  &quot;start&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;NODE_OPTIONS=--openssl-legacy-provider react-scripts start&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>Quick temporary fix</li><li>一時的な対応策</li><li>临时解决方案</li></ul><hr><h2 id="_2-using-nvm-to-manage-node-js-versions-nvm使用相关指令-从下载开始-nvmによるnode-jsバージョン管理" tabindex="-1">2. Using nvm to Manage Node.js Versions (nvm使用相关指令，从下载开始 / nvmによるNode.jsバージョン管理) <a class="header-anchor" href="#_2-using-nvm-to-manage-node-js-versions-nvm使用相关指令-从下载开始-nvmによるnode-jsバージョン管理" aria-label="Permalink to &quot;2. Using nvm to Manage Node.js Versions (nvm使用相关指令，从下载开始 / nvmによるNode.jsバージョン管理)&quot;">​</a></h2><p>Downgrade Node.js to 16.x for better compatibility.<br> Use nvm (Node Version Manager) to easily switch versions.</p><p>互換性のために Node.js を16系にダウングレードし、<br> nvmを使ってバージョン管理を行います。</p><p>为了兼容性，将 Node.js 降级到16.x，<br> 使用 nvm（Node版本管理器）方便切换版本。</p><h3 id="install-nvm-macos-linux" tabindex="-1">Install nvm (macOS/Linux) <a class="header-anchor" href="#install-nvm-macos-linux" aria-label="Permalink to &quot;Install nvm (macOS/Linux)&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -qO-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre></div><p>Install後、ターミナルを再起動するか：</p><p>インストール後重新打开终端或运行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVM_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$([ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XDG_CONFIG_HOME-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot; ] &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %s &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/.nvm&quot; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %s &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XDG_CONFIG_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/nvm&quot;)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span></span></code></pre></div><h3 id="nvm-commands-nvmコマンド-nvm指令" tabindex="-1">nvm commands (nvmコマンド / nvm指令) <a class="header-anchor" href="#nvm-commands-nvmコマンド-nvm指令" aria-label="Permalink to &quot;nvm commands (nvmコマンド / nvm指令)&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Show available Node versions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls-remote</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install latest Node.js 16.x (example: 16.20.0)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16.20.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># List installed versions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Use specific version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16.20.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Set default version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16.20.0</span></span></code></pre></div><h3 id="windows-users" tabindex="-1">Windows users <a class="header-anchor" href="#windows-users" aria-label="Permalink to &quot;Windows users&quot;">​</a></h3><p>Use <a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="noreferrer">nvm-windows</a>.<br> PowerShellやcmdで同様にバージョン管理できます。</p><p>Windowsユーザーは nvm-windows を使ってください。<br> PowerShellやcmdでバージョン管理可能です。</p><p>Windows用户请使用 nvm-windows。<br> 可在 PowerShell 或 cmd 中管理版本。</p><hr><h2 id="_3-other-fixes-その他の対応策-其他解决方案" tabindex="-1">3. Other Fixes / その他の対応策 / 其他解决方案 <a class="header-anchor" href="#_3-other-fixes-その他の対応策-其他解决方案" aria-label="Permalink to &quot;3. Other Fixes / その他の対応策 / 其他解决方案&quot;">​</a></h2><ul><li>Update Webpack config (e.g., <code>resolve.fallback</code>)</li><li>Update dependencies to latest versions</li></ul><p>Webpack設定の更新（<code>resolve.fallback</code>など）<br> 依存ライブラリの最新化</p><p>更新Webpack配置（例如 <code>resolve.fallback</code>）<br> 更新依赖到最新版</p><hr><h2 id="summary-table-まとめ表-方案总结" tabindex="-1">Summary Table / まとめ表 / 方案总结 <a class="header-anchor" href="#summary-table-まとめ表-方案总结" aria-label="Permalink to &quot;Summary Table / まとめ表 / 方案总结&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Solution / 方法 / 方案</th><th>Pros / メリット / 优点</th><th>Cons / デメリット / 缺点</th></tr></thead><tbody><tr><td>1. <code>--openssl-legacy-provider</code></td><td>Quick &amp; easy / すぐ使える / 快速简便</td><td>Temporary fix / 一時対応 / 临时方案</td></tr><tr><td>2. Use nvm to switch Node.js to 16</td><td>Stable / 安定動作 / 稳定可靠</td><td>Setup required / 環境整備が必要 / 需要配置</td></tr><tr><td>3. Modify Webpack config</td><td>Potential root fix / 根本対応の可能性 / 根本解决可能</td><td>May break crypto usage / crypto使用注意 / 可能影响加密功能</td></tr><tr><td>4. Update dependencies</td><td>Recommended long term / 長期推奨 / 长期推荐</td><td>Time &amp; testing needed / 時間と検証必要 / 需要时间测试</td></tr></tbody></table><hr><h2 id="references-参考リンク-参考资料" tabindex="-1">References / 参考リンク / 参考资料 <a class="header-anchor" href="#references-参考リンク-参考资料" aria-label="Permalink to &quot;References / 参考リンク / 参考资料&quot;">​</a></h2><ul><li><a href="https://nodejs.org/en/blog/release/v17.0.0/#openssl-3.0" target="_blank" rel="noreferrer">Node.js OpenSSL 3 Migration Guide</a></li><li><a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noreferrer">nvm GitHub</a></li><li><a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="noreferrer">nvm-windows GitHub</a></li><li><a href="https://github.com/webpack/webpack/issues/14532" target="_blank" rel="noreferrer">Webpack Issue #14532</a></li></ul>`,40)]))}const u=i(t,[["render",r]]);export{c as __pageData,u as default};

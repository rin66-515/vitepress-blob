import{_ as o,c as d,o as c,ae as t}from"./chunks/framework.DtB2lZXX.js";const u=JSON.parse('{"title":"指定カラム重複のSQL","description":"特定の列が同じレコードを抽出し、並び替えるSQL","frontmatter":{"title":"指定カラム重複のSQL","date":"2025-05-25","tags":["SQL","in","join","having"],"description":"特定の列が同じレコードを抽出し、並び替えるSQL"},"headers":[],"relativePath":"20250525-Find and Sort Duplicate Records Based on Specific Columns in SQL.md","filePath":"20250525-Find and Sort Duplicate Records Based on Specific Columns in SQL.md"}'),n={name:"20250525-Find and Sort Duplicate Records Based on Specific Columns in SQL.md"};function a(s,e,i,r,p,_){return c(),d("div",null,e[0]||(e[0]=[t("<p>あるテーブルにおいて、特定の列（例：name, emailなど）の値が<strong>同じレコードを抽出</strong>し、別の列（例：作成日時など）で<strong>並び替える</strong>。</p><p>In a table, we want to <strong>find rows that share the same values on specific columns</strong>, and then <strong>sort them</strong> by another field (e.g., timestamp, count).</p><p>参考１：</p><p><code>SELECT *</code><code>FROM users</code><code>WHERE (email, phone) IN (</code><code>SELECT email, phone</code><code>FROM users</code><code>GROUP BY email, phone</code><code>HAVING COUNT(*) &gt; 1</code><code>)</code><code>ORDER BY created_at DESC;</code></p><p>参考２：</p><p><code>SELECT u.*</code><code>FROM users u</code><code>JOIN (</code><code>SELECT email, phone</code><code>FROM users</code><code>GROUP BY email, phone</code><code>HAVING COUNT(*) &gt; 1</code><code>) dup</code><code>ON u.email = dup.email AND u.phone = dup.phone</code><code>ORDER BY u.created_at DESC;</code></p>",6)]))}const S=o(n,[["render",a]]);export{u as __pageData,S as default};
